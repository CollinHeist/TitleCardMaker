name: multi-build-docker
on: 
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_ACCESS_TOKEN:
        required: true
      GH_TOKEN:
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Set up QEMU for ARM emulation
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: python3 build cache for docker
        uses: actions/cache@v4
        with:
          path: python-build-cache
          key: ${{ runner.os }}-python-build-cache-${{ hashFiles('Pipfile.lock') }}

      - name: inject python-build-cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3 # v2.1.4
        with:
          cache-map: | 
            { 
              "python-build-cache" : "/root/.cache"
            }

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm/v7 # edit this if you want to build more architectures
          file: Dockerfile.armv7
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/titlecardmaker:${{ inputs.tag }},ghcr.io/collinheist/titlecardmaker:${{ inputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
